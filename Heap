Priority Queue Ordering 


Priority Queue ordering for any integers,characters or pair of integers is based on ordering of first element or ordering of second element.

----Priority Queue ordered by first element(Max)

In C++ if we have a pair in priority queue, then priority is based on first element of pair         
        -> priority_queue<pair<int,int>>maxHeap;
Note: If the first element of some pairs will be same, then the comparison will be made on the basis of the second element.

-----Priority Queue ordered by first Element(Min)

In C++ if we have a pair in priority queue, then priority is based on second element of pair        
    -> priority_queue<pair<int,int>,greater<int>>minHeap;
Note: If the first element of some pairs will be same, then the comparison will be made on the basis of the second element.





-----Priority Queue ordered by Second Element (Max)

In C++, use Custom Comparator class to define the ordering of second Element. 
    priority_queue<Node*,vector<Node*>,compare>maxHeap; 
or 
    priority_queue<pair<char,int>,vector<pair<char,int>>,compare>maxHeap;

class compare{
    public:
        bool operator()(Node* a, Node* b) {
            return a->count < b->count;
        }
};



---- Priority Queue ordered by Second Element (Min)
In C++, use Custom Comparator class to define the ordering of second Element. 
    priority_queue<Node*,vector<Node*>,compare>maxHeap; 
or 
    priority_queue<pair<char,int>,vector<pair<char,int>>,compare>maxHeap;

class compare{
    public:
        bool operator()(Node* a, Node* b) {
            return a->count > b->count;
        }
};

